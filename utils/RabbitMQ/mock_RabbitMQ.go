// Code generated by mockery v2.23.0. DO NOT EDIT.

package rabbitConfig

import mock "github.com/stretchr/testify/mock"

// MockRabbitMQ is an autogenerated mock type for the RabbitMQ type
type MockRabbitMQ struct {
	mock.Mock
}

// Listen provides a mock function with given fields: queueName, sub
func (_m *MockRabbitMQ) Listen(queueName string, sub *Subscriber) {
	_m.Called(queueName, sub)
}

// Send provides a mock function with given fields: queueName, requestBody
func (_m *MockRabbitMQ) Send(queueName string, requestBody interface{}) error {
	ret := _m.Called(queueName, requestBody)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(queueName, requestBody)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockRabbitMQ interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRabbitMQ creates a new instance of MockRabbitMQ. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRabbitMQ(t mockConstructorTestingTNewMockRabbitMQ) *MockRabbitMQ {
	mock := &MockRabbitMQ{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
